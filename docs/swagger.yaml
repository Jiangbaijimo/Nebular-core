openapi: 3.0.0
paths:
  /api/auth/register:
    post:
      operationId: AuthController_register
      summary: 用户注册
      description: 创建新用户账户
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: 注册成功
        '400':
          description: 请求参数错误
      tags: &ref_0
        - 认证管理
  /api/auth/login:
    post:
      operationId: AuthController_login
      summary: 用户登录
      description: 用户登录获取访问令牌
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: 登录成功
        '401':
          description: 用户名或密码错误
      tags: *ref_0
  /api/auth/refresh:
    post:
      operationId: AuthController_refresh
      summary: 刷新令牌
      description: 使用刷新令牌获取新的访问令牌
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDto'
      responses:
        '200':
          description: 刷新成功
        '401':
          description: 刷新令牌无效
      tags: *ref_0
  /api/auth/logout:
    post:
      operationId: AuthController_logout
      summary: 用户登出
      description: 用户登出并使令牌失效
      parameters: []
      responses:
        '200':
          description: 登出成功
      tags: *ref_0
      security:
        - JWT-auth: []
  /api/auth/profile:
    get:
      operationId: AuthController_getProfile
      summary: 获取用户信息
      description: 获取当前登录用户的详细信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
      tags: *ref_0
      security:
        - JWT-auth: []
  /api/auth/google:
    get:
      operationId: AuthController_googleAuth
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/auth/google/callback:
    get:
      operationId: AuthController_googleAuthCallback
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/auth/github:
    get:
      operationId: AuthController_githubAuth
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/auth/github/callback:
    get:
      operationId: AuthController_githubAuthCallback
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/users:
    post:
      operationId: UserController_create
      summary: 创建用户
      description: 创建新用户账户
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: 创建成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: &ref_1
        - 用户管理
      security:
        - JWT-auth: []
    get:
      operationId: UserController_findAll
      summary: 获取用户列表
      description: 分页获取用户列表
      parameters:
        - name: page
          required: false
          in: query
          description: 页码
          schema:
            example: 1
            type: string
        - name: limit
          required: false
          in: query
          description: 每页数量
          schema:
            example: 10
            type: string
        - name: status
          required: false
          in: query
          description: 用户状态
          schema:
            enum:
              - active
              - inactive
              - banned
            type: string
        - name: search
          required: false
          in: query
          description: 搜索关键词
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/profile:
    get:
      operationId: UserController_getProfile
      summary: 获取个人信息
      description: 获取当前登录用户的个人信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
      tags: *ref_1
      security:
        - JWT-auth: []
    patch:
      operationId: UserController_updateProfile
      summary: 更新个人信息
      description: 更新当前登录用户的个人信息
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/stats:
    get:
      operationId: UserController_getStats
      summary: 获取用户统计
      description: 获取用户统计信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/{id}:
    get:
      operationId: UserController_findOne
      summary: 获取用户详情
      description: 根据ID获取用户详细信息
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
    patch:
      operationId: UserController_update
      summary: 更新用户信息
      description: 根据ID更新用户信息
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
    delete:
      operationId: UserController_remove
      summary: 删除用户
      description: 根据ID删除用户
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 删除成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/{id}/status:
    patch:
      operationId: UserController_changeStatus
      summary: 修改用户状态
      description: 修改用户账户状态
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserStatusDto'
      responses:
        '200':
          description: 修改成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/{id}/roles:
    post:
      operationId: UserController_assignRole
      summary: 分配角色
      description: 为用户分配角色
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleDto'
      responses:
        '200':
          description: 分配成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/users/{id}/roles/{roleId}:
    delete:
      operationId: UserController_removeRole
      summary: 移除角色
      description: 移除用户的角色
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: roleId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 移除成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 用户不存在
      tags: *ref_1
      security:
        - JWT-auth: []
  /api/blogs:
    post:
      operationId: BlogController_create
      summary: 创建博客
      description: 创建新的博客文章
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlogDto'
      responses:
        '201':
          description: 创建成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: &ref_2
        - 博客管理
      security:
        - JWT-auth: []
    get:
      operationId: BlogController_findAll
      summary: 获取博客列表
      description: 获取已发布的博客列表（公开接口）
      parameters: []
      responses:
        '200':
          description: 获取成功
      tags: *ref_2
  /api/blogs/admin:
    get:
      operationId: BlogController_findAllForAdmin
      summary: 管理员获取博客列表
      description: 管理员获取所有状态的博客列表
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_2
      security:
        - JWT-auth: []
  /api/blogs/my:
    get:
      operationId: BlogController_findMyBlogs
      summary: 获取我的博客
      description: 获取当前用户的博客列表
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
      tags: *ref_2
      security:
        - JWT-auth: []
  /api/blogs/stats:
    get:
      operationId: BlogController_getStats
      summary: 获取博客统计
      description: 获取博客相关统计信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
      tags: *ref_2
      security:
        - JWT-auth: []
  /api/blogs/slug/{slug}:
    get:
      operationId: BlogController_findBySlug
      summary: 通过别名获取博客
      description: 通过博客别名获取博客详情
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
        '404':
          description: 博客不存在
      tags: *ref_2
  /api/blogs/{id}:
    get:
      operationId: BlogController_findOne
      summary: 获取博客详情
      description: 通过ID获取博客详情并增加浏览量
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 获取成功
        '404':
          description: 博客不存在
      tags: *ref_2
    patch:
      operationId: BlogController_update
      summary: 更新博客
      description: 更新指定博客的信息
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlogDto'
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 博客不存在
      tags: *ref_2
      security:
        - JWT-auth: []
    delete:
      operationId: BlogController_remove
      summary: 删除博客
      description: 删除指定的博客
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 删除成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 博客不存在
      tags: *ref_2
      security:
        - JWT-auth: []
  /api/blogs/{id}/like:
    post:
      operationId: BlogController_likeBlog
      summary: 点赞博客
      description: 为指定博客点赞
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 点赞成功
        '404':
          description: 博客不存在
      tags: *ref_2
    delete:
      operationId: BlogController_unlikeBlog
      summary: 取消点赞
      description: 取消对指定博客的点赞
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 取消点赞成功
        '404':
          description: 博客不存在
      tags: *ref_2
  /api/categories:
    post:
      operationId: CategoryController_create
      summary: 创建分类
      description: 创建新的博客分类
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDto'
      responses:
        '201':
          description: 创建成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: &ref_3
        - 分类管理
      security:
        - JWT-auth: []
    get:
      operationId: CategoryController_findAll
      summary: 获取分类列表
      description: 获取激活状态的分类列表（公开接口）
      parameters: []
      responses:
        '200':
          description: 获取成功
      tags: *ref_3
  /api/categories/admin:
    get:
      operationId: CategoryController_findAllForAdmin
      summary: 管理员获取分类列表
      description: 管理员获取所有状态的分类列表
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_3
      security:
        - JWT-auth: []
  /api/categories/tree:
    get:
      operationId: CategoryController_findTree
      summary: 获取分类树
      description: 获取分类的树形结构（公开接口）
      parameters: []
      responses:
        '200':
          description: 获取成功
      tags: *ref_3
  /api/categories/stats:
    get:
      operationId: CategoryController_getStats
      summary: 获取分类统计
      description: 获取分类统计信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_3
      security:
        - JWT-auth: []
  /api/categories/slug/{slug}:
    get:
      operationId: CategoryController_findBySlug
      summary: 根据别名获取分类
      description: 根据别名获取分类详情（公开接口）
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
        '404':
          description: 分类不存在
      tags: *ref_3
  /api/categories/{id}:
    get:
      operationId: CategoryController_findOne
      summary: 获取分类详情
      description: 根据ID获取分类详情（公开接口）
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 获取成功
        '404':
          description: 分类不存在
      tags: *ref_3
    patch:
      operationId: CategoryController_update
      summary: 更新分类
      description: 更新分类信息
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDto'
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 分类不存在
      tags: *ref_3
      security:
        - JWT-auth: []
    delete:
      operationId: CategoryController_remove
      summary: 删除分类
      description: 删除指定分类
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 删除成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 分类不存在
      tags: *ref_3
      security:
        - JWT-auth: []
  /api/categories/{id}/blog-count:
    patch:
      operationId: CategoryController_updateBlogCount
      summary: 更新博客数量
      description: 更新分类下的博客数量
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 分类不存在
      tags: *ref_3
      security:
        - JWT-auth: []
  /api/comments:
    post:
      operationId: CommentController_create
      summary: 创建评论
      description: 创建新评论
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
      responses:
        '201':
          description: 创建成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: &ref_4
        - 评论管理
      security:
        - JWT-auth: []
    get:
      operationId: CommentController_findAll
      summary: 获取评论列表
      description: 管理员获取所有评论列表
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/blog/{blogId}:
    get:
      operationId: CommentController_findByBlog
      summary: 获取博客评论
      description: 获取指定博客的评论列表（公开接口）
      parameters:
        - name: blogId
          required: true
          in: path
          schema:
            type: number
        - name: includeChildren
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
      tags: *ref_4
  /api/comments/my:
    get:
      operationId: CommentController_findMyComments
      summary: 获取我的评论
      description: 获取当前用户的评论列表
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/stats:
    get:
      operationId: CommentController_getStats
      summary: 获取评论统计
      description: 获取评论统计信息
      parameters: []
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/{id}:
    get:
      operationId: CommentController_findOne
      summary: 获取评论详情
      description: 根据ID获取评论详情
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 获取成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
    patch:
      operationId: CommentController_update
      summary: 更新评论
      description: 更新评论内容
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentDto'
      responses:
        '200':
          description: 更新成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
    delete:
      operationId: CommentController_remove
      summary: 删除评论
      description: 删除指定评论
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 删除成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/{id}/status:
    patch:
      operationId: CommentController_changeStatus
      summary: 修改评论状态
      description: 修改评论的审核状态
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCommentStatusDto'
      responses:
        '200':
          description: 修改成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/{id}/approve:
    post:
      operationId: CommentController_approve
      summary: 审核通过评论
      description: 将评论状态设为审核通过
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 审核成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/{id}/reject:
    post:
      operationId: CommentController_reject
      summary: 拒绝评论
      description: 将评论状态设为拒绝
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 拒绝成功
        '401':
          description: 未授权访问
        '403':
          description: 权限不足
        '404':
          description: 评论不存在
      tags: *ref_4
      security:
        - JWT-auth: []
  /api/comments/{id}/like:
    post:
      operationId: CommentController_likeComment
      summary: 点赞评论
      description: 为评论点赞
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 点赞成功
        '404':
          description: 评论不存在
      tags: *ref_4
    delete:
      operationId: CommentController_unlikeComment
      summary: 取消点赞评论
      description: 取消对评论的点赞
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 取消点赞成功
        '404':
          description: 评论不存在
      tags: *ref_4
info:
  title: 博客后端系统
  description: A modern blog API built with NestJS
  version: 1.0.0
  contact: {}
tags:
  - name: 认证管理
    description: 用户认证相关接口
  - name: 用户管理
    description: 用户管理相关接口
  - name: 博客管理
    description: 博客管理相关接口
  - name: 分类管理
    description: 分类管理相关接口
  - name: 评论管理
    description: 评论管理相关接口
servers: []
components:
  securitySchemes:
    JWT-auth:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT token
      in: header
  schemas:
    RegisterDto:
      type: object
      properties: {}
    LoginDto:
      type: object
      properties: {}
    RefreshTokenDto:
      type: object
      properties: {}
    CreateUserDto:
      type: object
      properties: {}
    UpdateUserDto:
      type: object
      properties: {}
    ChangeUserStatusDto:
      type: object
      properties: {}
    AssignRoleDto:
      type: object
      properties: {}
    CreateBlogDto:
      type: object
      properties: {}
    UpdateBlogDto:
      type: object
      properties: {}
    CreateCategoryDto:
      type: object
      properties: {}
    UpdateCategoryDto:
      type: object
      properties: {}
    CreateCommentDto:
      type: object
      properties: {}
    UpdateCommentDto:
      type: object
      properties: {}
    ChangeCommentStatusDto:
      type: object
      properties: {}
